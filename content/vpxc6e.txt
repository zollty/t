<p>题干=</p><p>TCP连接有哪几种状态？TCP连接中的ESTABLISHED状态是什么意思？</p><p>答案=</p><p>established，establish的过去式，含义：TCP已建立连接。表示两台机器正在通信。</p><p>TCP连接的状态：</p><ul class=" list-paddingleft-2" style="list-style-type: disc;"><li><p>LISTEN：侦听来自远方的TCP端口的连接请求</p></li><li><p>SYN-SENT：发送连接请求后等待匹配的连接请求（SYN_SENT状态表示请求连接，如果连接成功了就变为ESTABLISHED）</p></li><li><p>SYN-RECEIVED：再收到和发送一个连接请求后等待对方对连接请求的确认</p></li><li><p>ESTABLISHED：代表一个打开的连接（两台机器正在通信）</p></li><li><p><span style="color: rgb(192, 0, 0);">FIN-WAIT-1：等待远程TCP连接中断请求，或先前的连接中断请求的确认</span></p></li><li><p><span style="color: rgb(192, 0, 0);">FIN-WAIT-2：从远程TCP等待连接中断请求</span></p></li><li><p>CLOSE-WAIT：等待从本地用户发来的连接中断请求</p></li><li><p>CLOSING：等待远程TCP对连接中断的确认</p></li><li><p>LAST-ACK：等待原来的发向远程TCP的连接中断请求的确认</p></li><li><p>TIME-WAIT：等待足够的时间以确保远程TCP接收到连接中断请求的确认</p></li><li><p>CLOSED：没有任何连接状态</p></li></ul><p>详见：<a href="http://blog.csdn.net/mei922/article/details/4801858">http://blog.csdn.net/mei922/article/details/4801858</a> </p><p><br/></p><p>题干=</p><p>TCP连接中CLOSE-WAIT和TIME_WAIT 状态的区别是什么？</p><p>答案=</p><p>CLOSE-WAIT代表被动关闭连接的一方，在接收到对方关闭连接的请求后，处于的状态。</p><p>TIME_WAIT代表主动关闭连接的一方，在给对方发出关闭连接的消息后，等待对方返回连接已中断的确认（LAST_ACK）时，处于的状态。</p><p><br/></p><p>题干=</p><p>TCP连接状态的变迁流程是怎样的？</p><p>答案=</p><p>客户端的状态流程表示：</p><p>CLOSED-&gt;SYN_SENT-&gt;ESTABLISHED-&gt;FIN_WAIT_1-&gt;FIN_WAIT_2-&gt;TIME_WAIT-&gt;CLOSED</p><p>服务器的状态流程表示：</p><p>CLOSED-&gt;LISTEN-&gt;SYN-RECEIVED-&gt;ESTABLISHED-&gt;CLOSE_WAIT-&gt;LAST_ACK-&gt;CLOSED</p><p><br/></p><p>补充：</p><p>统计TCP连接各个状态的数量：</p><pre class="brush:plain;toolbar:false">zollty@linux:~$&nbsp;netstat&nbsp;-n&nbsp;|&nbsp;awk&nbsp;&#39;/^tcp/&nbsp;{++S[$NF]}&nbsp;END&nbsp;{for(a&nbsp;in&nbsp;S)&nbsp;print&nbsp;a,&nbsp;S[a]}&#39;
CLOSE_WAIT&nbsp;3
TIME_WAIT&nbsp;6
ESTABLISHED&nbsp;21
LAST_ACK&nbsp;11
SYN_SENT&nbsp;6</pre><p>说明，有3个连接处于等待本地发起中断，6个连接处于计时等待 远程连接发起中断确认请求，21个连接处于正在通信阶段，11个连接处于等待 远程连接返回确认中断连接，6个处于已发送出连接请求。</p><p><br/></p><p>题干=</p><p>TCP与UDP的区别？何时选择用UDP协议？</p><p>答案=</p><p>1）TCP与UDP的主要区别：</p><p>&nbsp; &nbsp; &nbsp; &nbsp;基于连接与无连接&nbsp;</p><p>　　对系统资源的要求（TCP较多，UDP少）&nbsp;</p><p>　　UDP程序结构较简单&nbsp;</p><p>　　流模式与数据报模式&nbsp;</p><p>　　TCP保证数据正确性，UDP可能丢包&nbsp;</p><p>　　TCP保证数据顺序，UDP不保证&nbsp;</p><p>2）TCP和UDP协议编程时的具体区别&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; socket()的参数不同&nbsp;</p><p>　　UDP Server不需要调用 listen和accept&nbsp;</p><p>　　UDP收发数据用sendto/recvfrom函数&nbsp;</p><p>　　TCP：地址信息在connect/accept时确定&nbsp;</p><p>　　UDP：在sendto/recvfrom函数中每次均 需指定地址信息&nbsp;</p><p>　　UDP：shutdown函数无效</p><p>3）何时选择用UDP协议？</p><p>部分满足以下几点要求时，应该采用UDP 面向数据报方式 网络数据大多为短消息&nbsp;</p><ul class=" list-paddingleft-2" style="list-style-type: disc;"><li><p>拥有大量Client&nbsp;</p></li><li><p>对数据安全性无特殊要求&nbsp;</p></li><li><p>网络负担非常重，但对响应速度要求高&nbsp;</p></li></ul><p><br/></p><p><br/></p>