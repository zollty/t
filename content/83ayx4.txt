<p>题干=</p><p>v-show和v-if指令的共同点和不同点？</p><p>答案=</p><p>v-show指令是通过修改元素的display的CSS属性让其显示或者隐藏</p><p>v-if指令是直接销毁和重建DOM达到让元素显示和隐藏的效果</p><p><br/></p><p>题干=</p><p>说出至少4种vue当中的指令和它的用法？</p><p>答案=</p><p>v-if：判断是否隐藏；</p><p>v-for：数据循环；</p><p>v-on：监听 DOM 事件；</p><p>v-show：切换元素的 CSS 的display属性；</p><p>v-model：实现表单数的双向绑定;</p><p>v-once：执行一次性地插值，当数据改变时，内容不会更新。</p><p><br/></p><p>题干=</p><p>Vue中，怎么注册组件和使用组件？</p><p>答案=</p><p>使用import引入组件：</p><p>import ComponentA from &#39;./ComponentA.vue&#39;</p><p><br/></p><p>“全局组件”，注册方式如下：</p><p>Vue.component(&#39;MyComponent&#39;,&nbsp; ComponentA&nbsp;)</p><p>Vue.component(&#39;MyComponent&#39;, {</p><p>&nbsp; template: &#39;&lt;div&gt;A custom component!&lt;/div&gt;&#39;</p><p>})</p><p><br/></p><p>“局部组件”，注册方式如下：</p><p>new Vue({</p><p>&nbsp; el: &#39;#app&#39;</p><p>&nbsp; components: {</p><p>&nbsp; &nbsp; ComponentA,</p><p>&nbsp; &nbsp; ComponentB</p><p>&nbsp; }</p><p>})</p><p><br/></p><p>使用方式如下：</p><p>&lt;div id=&quot;app&quot;&gt;</p><p>&nbsp; &lt;component-a&gt;&lt;/component-a&gt;</p><p>&nbsp; &lt;component-b&gt;&lt;/component-b&gt;</p><p>&nbsp; &lt;component-c&gt;&lt;/component-c&gt;</p><p>&lt;/div&gt;</p><p><br/></p><p>详细参见：<a href="https://cn.vuejs.org/v2/guide/components-registration.html" target="_blank">https://cn.vuejs.org/v2/guide/components-registration.html</a></p><p><br/></p><p>题干=</p><p>组件之间的如何传值？1.父组件与子组件传值，2.子组件向父组件传递数据</p><p>答案=</p><p>1.父组件与子组件传值</p><p>&nbsp; 父组件通过标签上面定义传值</p><p>&nbsp; 子组件通过props方法接受数据</p><p><br/></p><p>2.子组件向父组件传递数据</p><p>&nbsp; 子组件通过$emit方法传递参数</p><p>&nbsp; 父组件通过定义标签上面的@定义方法，接收传入的参数。</p><p><br/></p><p><br/></p><p>题干=</p><p>vue有哪几个生命周期？</p><p>答案=</p><p>8个，创建前/后（beforeCreate/created），载入前/后（beforeMount/mounted），更新前/后，销毁前/后。</p><p>每个阶段都可以触发事件，执行自定义的函数。</p><p><br/></p><p><strong>创建前/后</strong>： 在beforeCreated阶段，vue实例的挂载元素$el和数据对象data都为undefined，还未初始化。在created阶段，vue实例的数据对象data有了，$el还没有。</p><p><br/></p><p><strong>载入前/后</strong>：在beforeMount阶段，vue实例的$el和data都初始化了，但还是挂载之前为虚拟的dom节点，data.message还未替换。在mounted阶段，vue实例挂载完成，data.message成功渲染。</p><p><br/></p><p><strong>更新前/后</strong>：当data变化时，会触发beforeUpdate和updated方法。</p><p><br/></p><p><strong>销毁前/后</strong>：在执行destroy方法后，对data的改变不会再触发周期函数，说明此时vue实例已经解除了事件监听以及和dom的绑定，但是dom结构依然存在。</p><p><br/></p><p>详见：<a href="https://cn.vuejs.org/v2/guide/instance.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%9B%BE%E7%A4%BA" target="_blank">https://cn.vuejs.org/v2/guide/instance.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%9B%BE%E7%A4%BA</a></p><p><br/></p><p><br/></p><p>题干=</p><p>第一次页面加载会触发哪几个钩子</p><p>答案=</p><p>第一次页面加载时会触发 beforeCreate, created, beforeMount, mounted 这几个钩子</p><p><br/></p><p>题干=</p><p>DOM 渲染在 哪个周期中就已经完成</p><p>答案=</p><p>DOM 渲染在 mounted 中就已经完成了。</p><p><br/></p><p>题干=</p><p>如何让CSS只在当前组件中起作用？</p><p>答案=</p><p>将当前组件的&lt;style&gt;修改为&lt;style scoped&gt;</p><p><br/></p><p>题干=</p><p>&lt;keep-alive&gt;&lt;/keep-alive&gt;的作用是什么?</p><p>答案=</p><p>&lt;keep-alive&gt;&lt;/keep-alive&gt; 包裹动态组件时，会缓存不活动的组件实例,主要用于保留组件状态或避免重新渲染。</p><p><br/></p><p>大白话: 比如有一个列表和一个详情，那么用户就会经常执行打开详情=&gt;返回列表=&gt;打开详情…这样的话列表和详情都是一个频率很高的页面，那么就可以对列表组件使用&lt;keep-alive&gt;&lt;/keep-alive&gt;进行缓存，这样用户每次返回列表的时候，都能从缓存中快速渲染，而不是重新渲染。</p><p><br/></p><p>详见：<a href="https://cn.vuejs.org/v2/guide/components-dynamic-async.html" target="_blank">https://cn.vuejs.org/v2/guide/components-dynamic-async.html</a></p><p><br/></p><p>题干=</p><p>mvvm框架是什么？说说对双向数据绑定的理解？它和其它框架（jquery）的区别是什么？哪些场景适合？</p><p>答案=</p><p>MVVM的，分开来说就是M、V、VM：</p><p><strong>M</strong>模型就是用来定义驱动的数据；</p><p><strong>V</strong>经过数据改变后的html；</p><p><strong>VM</strong>就是连接数据和视图，用来实现双向绑定。</p><p><br/></p><p>双向绑定的理解：</p><p>一个变了另外一个跟着变了，例如：视图一个绑定了模型的节点有变化，模型对应的值会跟着变。</p><p><br/></p><p>与Jquery的区别：</p><p>Vue数据驱动，通过数据来显示视图层而不是节点DOM操作。</p><p><br/></p><p>适用场景：</p><p>数据操作比较多的场景，更加便捷。</p><p><br/></p><p><br/></p>