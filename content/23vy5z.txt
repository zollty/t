<p>题干=</p><p>23种设计模式及3种类型、6大原则</p><p>答案=</p><p>三大类型，6(7)个原则，23种设计模式，由GoF 4人帮提出。</p><p><br/></p><p><strong>3大类型</strong>：创建、结构、行为 型模式。</p><p><br/></p><p><strong>6大原则</strong>（Solid-cd）：</p><p>S：Single 单一职责</p><p>O：Open 开闭原则</p><p>L：Liskov里氏置换</p><p>I： Interface 接口隔离</p><p>D：Dependency 依赖反转</p><p>C：Composite合则复用</p><p>D： Demeter 迪米特法则（最少知道）</p><p><br/></p><p><strong>23种模式</strong>：</p><p><span style="color: rgb(192, 0, 0);">创建型：</span>单例模式、建造者模式、工厂模式、抽象工厂模式、原型模式。（5种）</p><p><span style="color: rgb(192, 0, 0);">结构型：</span>适配器模式、桥接模式、装饰模式、组合模式、外观模式、享元模式、代理模式。（7种）</p><p><span style="color: rgb(192, 0, 0);">行为型：</span>观察者模式、策略模式、责任链模式、迭代器模式、访问者模式、状态模式、模版方法模式、命令模式、中介者模式、备忘录模式、解释器模式（Interpreter模式）。（11种）</p><p><br/></p><p><span style="color: rgb(192, 0, 0);">0、单一职责原则（<span style="color: rgb(0, 176, 240);">S</span>ingle Responsibility Principle）</span></p><p>类的职责要单一，不能将太多的职责放在一个类中。</p><p><span style="color: rgb(192, 0, 0);">1、开闭原则（<span style="color: rgb(0, 176, 240);">O</span>pen Close Principle）</span></p><p>对扩展开放，对修改关闭。</p><p><span style="color: rgb(192, 0, 0);">2、里氏代换原则（<span style="color: rgb(0, 176, 240);">L</span>iskov Substitution Principle）</span></p><p>任何基类可以出现的地方，子类一定可以出现。</p><p><span style="color: rgb(192, 0, 0);">3、接口隔离原则（<span style="color: rgb(0, 176, 240);">I</span>nterface Segregation Principle）</span></p><p>使用多个专门的接口来取代一个统一的接口。</p><p><span style="color: rgb(192, 0, 0);">4、依赖倒转原则（<span style="color: rgb(0, 176, 240);">D</span>ependence Inversion Principle）</span></p><p>要针对于抽象层编程、接口编程，而不要针对于具体类编程。</p><p><span style="color: rgb(192, 0, 0);">5、合成复用原则（<span style="color: rgb(0, 176, 240);">C</span>omposite Reuse Principle）</span></p><p>尽量使用组合/聚合的关联方式，尽量少甚至不使用继承关系。</p><p><span style="color: rgb(192, 0, 0);">6、迪米特法则（最少知道原则）（Law of Demeter，<span style="color: rgb(0, 176, 240);">D</span>emeter Principle）</span></p><p>一个实体应当尽量少的与其他实体之间发生相互作用，使得系统功能模块相对独立。</p><p><br/></p><p><br/></p>